# ------------------------------------------(50)|
##### 제목 - 50자 이내로 요약 / 변경사항이 "무엇"인지 명확하게

# <타입>: <제목>의 형식으로 작성 / 예) feat: 로그인 기능 추가 

# ----------------------------------------------------------------(72)|
##### 본문 - 한 줄에 최대 72자 이내로 작성(위의 선이 72자)

# 어떻게 보다 "무엇"을 "왜" 수정했는지 구체적으로 작성

# ---------------------------------------------------------------------
##### 꼬릿말(생략 가능) - 현재 커밋과 관련된 이슈 번호를 작성

# <유형>: <#이슈 번호> 형식으로 작성  / 예) Fixes: #4
# ---------------------------------------------------------------------
# - 제목에서의 <타입> 설명
# feat : 새로운 기능 추가
# fix : 버그 수정
# docs : 문서 추가, 수정, 삭제
# test : 테스트 코드 추가, 수정, 삭제
# refactor: 코드 리팩토링
# style : 기능에 영향을 주지 않는 코드 형식 변경
# chore : 빌드 스크립트, 패키지 매니저 수정
# ---------------------------------------------------------------------
# - 체크리스트
# "#"이 5개인(#####) 항목 바로 밑줄에 작성
# 줄 띄우기 위해 공백을 지우지 않는다
# 제목의 첫 글자는 대문자로 작성
# 제목은 명령문으로 작성 (과거형 X)
# 제목 끝에 마침표(.) 금지
# 제목과 본문을 한 줄 띄워 분리
# 본문에 여러줄의 메세지를 작성할 때 "-"로 구분
# Git GUI도구 사용시 주석문을 지운다
# ---------------------------------------------------------------------
# - 꼬릿말 <유형>
# fixes: 이슈 해결 중
# resolves: 이슈 해결
# ref: 참고 이슈
# related to: 해당 커밋에 관련된 이슈번호
# ---------------------------------------------------------------------
# - 커밋 메시지 예시
# feat: 로그인 기능 추가
# 
# 기획 요구사항에 따라 아이디, 비밀번호를 입력하여 가입된 정보와 
# 일치하면 로그인되는 기능 추가
#
# Resolves: #43
# Ref: #13
# Related to: #11, #13
# ---------------------------------------------------------------------